server:
  port: 0

spring:
  application:
    name: thicket-ticket

  profiles:
    active: localDB,kafka

  datasource:
    driver-class-name: ${localDB.driver}
    username: ${localDB.username_}
    password: ${localDB.password}
    url: ${localDB.url}

  jpa:
    hibernate:
      ddl-auto: create-drop
    properties:
      hibernate:
        format_sql: true
    show-sql: true

  kafka:
    consumer:
      bootstrap-servers: ${kafka.bootstrap-servers}
      group-id: ${kafka.group-id}
      auto-offset-reset: earliest
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.springframework.kafka.support.serializer.ErrorHandlingDeserializer
      properties:
        spring:
          deserializer:
            value:
              delegate:
                class: org.springframework.kafka.support.serializer.JsonDeserializer
          json:
            trusted:
              packages=*:
    producer:
      bootstrap-servers: ${kafka.bootstrap-servers}
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer

eureka:
  instance:
    instance-id: ${spring.application.name}:${spring.application.instance-id:${random.value}}
  client:
    register-with-eureka: true
    fetch-registry: true
    service-url:
      default-zone: http://localhost:8761/eureka