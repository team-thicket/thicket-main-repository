plugins {
	id 'java'
	id 'org.springframework.boot' version '3.1.5'
	id 'io.spring.dependency-management' version '1.1.3'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'

java {
	sourceCompatibility = '17'
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

ext {
	set('springCloudVersion', "2022.0.4")
}

dependencies {
	/*ORM & DataBase*/
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa:3.1.5'
	runtimeOnly 'com.h2database:h2:2.1.214'
	runtimeOnly 'org.mariadb.jdbc:mariadb-java-client:3.1.4'

	/*Rest Api*/
	implementation 'org.springframework.boot:spring-boot-starter-validation:3.1.5'
	implementation 'org.springframework.boot:spring-boot-starter-web:3.1.5'

	/*Spring Cloud*/
	implementation 'org.springframework.cloud:spring-cloud-starter:4.0.4'
//    implementation 'org.springframework.cloud:spring-cloud-starter-config:4.0.4'
//    implementation 'org.springframework.cloud:spring-cloud-starter-bootstrap:4.0.4'
	implementation 'org.springframework.cloud:spring-cloud-starter-netflix-eureka-client:4.0.3'
	implementation 'org.springframework.cloud:spring-cloud-starter-openfeign:4.0.4'

	/*JWT-Token-Session*/
	implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
	runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.11.5'
	runtimeOnly 'io.jsonwebtoken:jjwt-gson:0.11.5'

	/*Develop Tools*/
	compileOnly 'org.projectlombok:lombok:1.18.30'
	annotationProcessor 'org.projectlombok:lombok:1.18.30'
	testImplementation 'org.springframework.boot:spring-boot-starter-test:3.1.5'

	/*Swagger*/
	implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.0.2'
}

dependencyManagement {
	imports {
		mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
	}
}

tasks.named('bootBuildImage') {
	builder = 'paketobuildpacks/builder-jammy-base:latest'
}

tasks.named('test') {
	useJUnitPlatform()
}
